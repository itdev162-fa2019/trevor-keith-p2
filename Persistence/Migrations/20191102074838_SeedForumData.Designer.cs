// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20191102074838_SeedForumData")]
    partial class SeedForumData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("Domain.Reply", b =>
                {
                    b.Property<int>("replyId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("creationDT");

                    b.Property<int>("posterId");

                    b.Property<string>("replyContent");

                    b.HasKey("replyId");

                    b.ToTable("posts");

                    b.HasData(
                        new
                        {
                            replyId = -1,
                            creationDT = new DateTime(2019, 11, 2, 2, 48, 38, 596, DateTimeKind.Local).AddTicks(5086),
                            posterId = -1,
                            replyContent = "Reply -1"
                        },
                        new
                        {
                            replyId = -2,
                            creationDT = new DateTime(2019, 11, 2, 2, 48, 38, 596, DateTimeKind.Local).AddTicks(6758),
                            posterId = -2,
                            replyContent = "Reply -2"
                        },
                        new
                        {
                            replyId = -3,
                            creationDT = new DateTime(2019, 11, 2, 2, 48, 38, 596, DateTimeKind.Local).AddTicks(6781),
                            posterId = -3,
                            replyContent = "Reply -3"
                        });
                });

            modelBuilder.Entity("Domain.Thread", b =>
                {
                    b.Property<int>("threadId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("creationDT");

                    b.Property<int>("posterId");

                    b.Property<string>("threadContent");

                    b.Property<string>("threadTitle");

                    b.HasKey("threadId");

                    b.ToTable("threads");

                    b.HasData(
                        new
                        {
                            threadId = -1,
                            creationDT = new DateTime(2019, 11, 2, 2, 48, 38, 596, DateTimeKind.Local).AddTicks(1698),
                            posterId = -1,
                            threadContent = "Thread Content -1",
                            threadTitle = "Thread -1"
                        },
                        new
                        {
                            threadId = -2,
                            creationDT = new DateTime(2019, 11, 2, 2, 48, 38, 596, DateTimeKind.Local).AddTicks(3697),
                            posterId = -2,
                            threadContent = "Thread Content -2",
                            threadTitle = "Thread -2"
                        },
                        new
                        {
                            threadId = -3,
                            creationDT = new DateTime(2019, 11, 2, 2, 48, 38, 596, DateTimeKind.Local).AddTicks(3733),
                            posterId = -3,
                            threadContent = "Thread Content -3",
                            threadTitle = "Thread -3"
                        });
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("creationDate");

                    b.Property<string>("username");

                    b.HasKey("userId");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            userId = -1,
                            creationDate = new DateTime(2019, 11, 2, 2, 48, 38, 592, DateTimeKind.Local).AddTicks(994),
                            username = "Name -1"
                        },
                        new
                        {
                            userId = -2,
                            creationDate = new DateTime(2019, 11, 2, 2, 48, 38, 595, DateTimeKind.Local).AddTicks(8355),
                            username = "Name -2"
                        },
                        new
                        {
                            userId = -3,
                            creationDate = new DateTime(2019, 11, 2, 2, 48, 38, 595, DateTimeKind.Local).AddTicks(8379),
                            username = "Name -3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
